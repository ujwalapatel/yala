apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: argo-workflow-build-
  #name: wf-argo5
  namespace: argo
spec:
  entrypoint: workflow
  arguments:
    parameters:
    - name: version
      value: v1
    - name: github-user
      value: ujwalapatel
    - name: github-revision
      value: main
    - name: docker-org
      value: demo.goharbor.io
    - name: build-push-image
      value: true
    - name: image-name-backend
      value: gpharbor/yala12 
  volumes:
  - name: docker-config
    secret:
      secretName: harbor-registry-secret
    # projected:
    #   sources:
    #   - secret:
    #       name: regcred
    #       items:
    #       - key: .dockerconfigjson
    #         path: config.json     
  volumeClaimTemplates:
  - metadata:
      name: workspace
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 0.5Gi
  templates:
  - name: workflow
    steps:
    - - name: get-source
        template: get-source-code
    - - name: build-push
        template: build-and-push
        when: "{{workflow.parameters.build-push-image}} == true"
    #- - name: train
    #    template: tfjob
  - name: get-source-code
    inputs:
      artifacts:
      - name: git-repo
        path: /src/yala/
        git:
          repo: https://github.com/{{workflow.parameters.github-user}}/yala.git
          revision: "{{workflow.parameters.github-revision}}"
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["cp /src/yala/apps/* /workspace/; ls /workspace"]
      volumeMounts:
      - name: workspace
        mountPath: /workspace
  - name: build-and-push
    container:
      # image: alpine:latest
      # command: [sh, -c]
      # args: ["cat /root/.docker/config.json"]
      image: gcr.io/kaniko-project/executor:debug-v0.18.0
      args: ["--dockerfile","Dockerfile","--destination","{{workflow.parameters.docker-org}}/{{workflow.parameters.image-name-backend}}:{{workflow.parameters.version}}"]
      workingDir: /src/yala/apps/
      volumeMounts:
      - name: docker-config
        mountPath: "/root/.docker/config.json"
        subPath: ".dockerconfigjson"
      - name: workspace
        mountPath: /workspace